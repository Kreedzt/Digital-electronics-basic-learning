
* 数字电路基础
** (绪论)数字量和模拟量
   - 数字量: 在时间上和数量上都是 *离散*, *不连续* 的
     (存在一个最小数量单位Δ)
   - 模拟量: 数字量以外的都模拟量
   - 数字电路和模拟电路:
     工作信号, 研究的对象, 分析/设计方法以及所用的数学工具都有显著的不同

     电子技术: 是研究 *电子器件* 及 *电子器件应用* 的一门学科

     + 电子电路作用: 处理信息 / 能量转换
     + 模拟电路: 用连续的模拟电压/流值来表示信息
     + 数字电路: 用一个离散的电压序列来表示信息

       电路板:
       - 结构: Structure
         + 分级设计
         + 每级有限的复杂度
         + 可复用的模块

       - 接口: Interfaces
         + 系统工程核心元素
         + 隔离技术, 允许升级
         + 主要抽象机构

       - 优秀的系统设计:
         + 最小的代价实现最大的功能
         + 可靠
         + 对未来技术的兼容

*** 计划解决的问题
    - 理解事物工作原理
    - 理解理论基础
    - 学习设计和分析的原则
    - 自己设计电路
** 信息和编码
   了解编码目的, 了解二进制编码

   - 信息: 知识的传递, 描述的一种状态或事实
   - 度量信息: 
     二进制编码事物, 动态位数

*** 编码
    - 意义: 取名

    - 要点:
      + 唯一性
      + 机制
      + 有效位: 编码效率
      + 可靠性
      + 安全性

        
    举例:
    #+begin_quote
    2011010909
    #+end_quote

    数制: 表示数量的规则
    码制: 表示事物的规则

**** 数制
     1. 每一位的构成
     2. 从低位向高位的进位规则

        
     二进制的补码:
     1 位表正负, 其他表示大小

     - 算数运算
       二进制数的 0/1 可以表示数量, 进行四则运算
     - 二进制的正负号也是用 0/1 表示的
       在定点运算中, 最高位为符号位(*0 为正, 1 为负*)
       
       #+begin_example
       +5 = 00101
       -5 = 10101
       #+end_example
       
       #+begin_example
       +5 + (-5) = 00101 + 10101 = ?
       #+end_example

       二进制补码在计算时候, 最高位为符号位, 如果位数为 n, 那么可表达的最大正数为
       2^(N - 1) - 1

       #+begin_example
       11010110 = -42
       #+end_example

       加上小数点:
       #+begin_example
       1101.0110 = -2^3 + 2^2 + 2^0 + 2^-2 + 2^-3 = -2.625
       #+end_example

       补码原则:(为了使负数参与运算)
       + 最高位为符号位(0 为正, 1 为负)

       + 正数的补码和它的原码相同

       + 负数的补码 = 数值位逐位求反 + 1
       
       #+begin_example
       +5 = 0 0101
       -5补码: 1 1011(正数11, 5位总为16)
       #+end_example

       两个补码表示的二进制数相加时的符号位讨论
       结论: 将 2 个加数的符号位和来自最高位数字位的进位相加, 结果就是和的符号

**** 码制
     
     等长编码: 等长编码当中每一个事物都有相应的编码长度

     #+begin_example
     ASCⅡ: 7位二进制
     #+end_example

     常用的十进制代码:
     | 十进制数 | 8421 码 | 余 3 码 | 2421 码 | 5211 码 | 余 3 循环码 |
     |----------+---------+---------+---------+---------+-------------|
     |        0 |    0000 |    0011 |    0000 |    0000 |        0010 |
     |        1 |    0001 |    0100 |    0001 |    0001 |        0110 |
     |        2 |    0010 |    0101 |    0010 |    0100 |        0111 |
     |        3 |    0011 |    0110 |    0011 |    0101 |        0101 |
     |        4 |    0100 |    0111 |    0100 |    0111 |        0100 |
     |        5 |    1000 |    1011 |    1011 |    1000 |        1100 |
     |        6 |    0110 |    1001 |    1100 |    1001 |        1101 |
     |        7 |    0111 |    1010 |    1101 |    1100 |        1111 |
     |        8 |    1000 |    1011 |    1110 |    1101 |        1110 |
     |        9 |    1001 |    1100 |    1111 |    1111 |        1010 |

     出现非 8421 码的原因: 不够 *封闭*, 计算后不在范围内
